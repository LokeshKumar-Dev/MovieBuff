{"version":3,"sources":["components/SearchBox.js","components/moviePop.js","components/Cards.js","components/App.js","index.js"],"names":["SearchBox","state","term","onFormSubmit","event","preventDefault","props","run","setState","onSubmit","this","className","type","placeholder","aria-label","aria-describedby","value","onChange","e","target","Component","MovieDetail","movie","movieID","axios","get","then","response","data","catch","err","console","log","Modal","size","show","lgShow","onHide","setLgShow","aria-labelledby","Header","closeButton","Title","id","Body","alt","src","Poster","onError","Genre","Awards","BoxOffice","Language","Director","Actors","Released","Plot","Cards","useState","Type","style","color","Year","ButtonToolbar","Button","variant","onClick","imdbID","App","moviesList","map","key","movies","Index","app","onSearchTerm","searchValue","pageValue","unique","Search","length","href","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6138d7d9.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\nclass SearchBox extends Component{\r\n  state = { term:'' };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.run(this.state.term);\r\n\r\n    this.setState({term: ''});\r\n  }\r\n  render(){\r\n    return(\r\n        <form onSubmit={this.onFormSubmit} className=\"form-inline\">\r\n          <div className=\"input-group\">\r\n\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Movie Search\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" value={this.state.term} onChange={e =>{this.setState({term:e.target.value})}}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-dark\" type=\"submit\">Search</button>\r\n            </div>\r\n            \r\n          </div>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport React,{Component} from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport './moviePop.css'\r\n\r\nclass MovieDetail extends Component{\r\n\r\n  state={ movie:[], };\r\n\r\n  componentDidMount(){\r\n    const unique = '4d49aebe';\r\n    var movieID = this.props.movieID;\r\n    axios.get(`http://www.omdbapi.com/?apikey=${unique}&plot=full&i=${movieID}`)\r\n      .then(\r\n      (response) => {\r\n        this.setState({ movie:response.data });\r\n      })\r\n    .catch((err) => console.log('Error'));\r\n  }\r\n\r\n  render(){\r\n    const movie = this.state.movie;\r\n    return(\r\n      <Modal\r\n        size=\"lg\"\r\n        show={this.props.lgShow}\r\n        onHide={() => this.props.setLgShow(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          {movie.Title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"body__flex\">\r\n          <div className=\"body__flex-1\">\r\n            <img alt=\"poster\" src={movie.Poster} onError={(e)=>{e.target.src = 'images/notFound.png'}}/>\r\n          </div>\r\n          <div className=\"body__flex-2\">\r\n            <h1><span>Title:</span>{movie.Title}</h1>\r\n            <h2><span>Genre:</span>{movie.Genre}</h2>\r\n            <h2><span>Awards & BoxOffice:</span>{movie.Awards} & {movie.BoxOffice}</h2>\r\n            <h2><span>Language:</span>{movie.Language}</h2>\r\n            <h3><span>Director:</span>{movie.Director}</h3>\r\n            <h3><span>Actors:</span>{movie.Actors}</h3>\r\n            <h4><span>Released:</span>{movie.Released}</h4>\r\n            <h5><span>Plot:</span>{movie.Plot}</h5>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n// Actors: \"Devendra Banhart, Arnaldo Baptista, Lucinha Barbosa, Bill Bartell\"\r\n// Awards: \"5 wins & 6 nominations.\"\r\n// BoxOffice: \"N/A\"\r\n// Country: \"Brazil\"\r\n// DVD: \"N/A\"\r\n// Director: \"Paulo Henrique Fontenelle\"\r\n// Genre: \"Documentary, Biography, Music\"\r\n// Language: \"Portuguese, English\"\r\n// Metascore: \"N/A\"\r\n// Plot: \"N/A\"\r\n// Poster: \"https://m.media-amazon.com/images/M/MV5BNGRhMjAwZDUtNzRmMS00YjkyLTg1MTMtZWEyMjYwMWVhZTBhXkEyXkFqcGdeQXVyMTU2ODc4ODQ@._V1_SX300.jpg\"\r\n// Production: \"N/A\"\r\n// Rated: \"N/A\"\r\n// Ratings: [{â€¦}]\r\n// Released: \"19 Jun 2009\"\r\n// Response: \"True\"\r\n// Runtime: \"120 min\"\r\n// Title: \"Loki: Arnaldo Baptista\"\r\n// Type: \"movie\"\r\n// Website: \"N/A\"\r\n// Writer: \"Paulo Henrique Fontenelle\"\r\n// Year: \"2008\"\r\n// imdbID: \"tt1517095\"\r\n// imdbRating: \"8.3\"\r\n// imdbVotes: \"175\"\r\n\r\nexport default MovieDetail;\r\n","import React,{ useState } from 'react';\r\nimport MovieDetail from './moviePop';\r\nimport {Button,ButtonToolbar} from 'react-bootstrap';\r\n\r\nconst Cards = (movie) => {\r\n\r\n  const [lgShow, setLgShow] = useState(false);\r\n\r\n  return(\r\n    <>\r\n    <div className=\"col-sm-4\">\r\n      <div className=\"card text-white bg-dark mb-4 shadow-sm\">\r\n\r\n        <img alt=\"poster\" src={movie.movie.Poster} onError={(e)=>{e.target.src = 'images/notFound.png'}}></img>\r\n\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-text\">{movie.movie.Title}</h2>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <h4>{movie.movie.Type}</h4>\r\n            <h5 style={{color:'#3f444e'}}>{movie.movie.Year}</h5>\r\n          </div>\r\n            <ButtonToolbar>\r\n              <Button variant=\"dark\" onClick={() => setLgShow(true)}>View &rarr;</Button>\r\n              <MovieDetail movieID={movie.movie.imdbID} lgShow={lgShow} setLgShow={setLgShow}/>\r\n            </ButtonToolbar>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","// import Omdb from '../api/Omdb';\r\nimport React, {Component} from 'react';\r\nimport Cards from './Cards';\r\n\r\nclass App extends Component{\r\n  // onSearchTerm = async () => {\r\n  //   const data = await Omdb.get({\r\n  //     Parameter:{\r\n  //       i:'tt3896198'\r\n  //     }\r\n  //   });\r\n  //   console.log(data);\r\n  // }\r\n  state={ moviesList:[] };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {moviesList: props.movies};\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n          <div className=\"row\">\r\n            { this.state.moviesList.map((movie) => <Cards key={movie.imdbID} movie={movie}/>)}\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\nimport SearchBox from './components/SearchBox';\r\nimport App from './components/App';\r\n\r\nclass Index extends Component{\r\n\r\n  state={ movies:[],app:'' };\r\n\r\n  onSearchTerm = (searchValue=null,pageValue=1) => {\r\n    const unique = '4d49aebe';\r\n    axios.get(`http://www.omdbapi.com/?apikey=${unique}&s=${searchValue}&page=${pageValue}`)\r\n    .then(\r\n      (response) => {\r\n        this.setState({ movies:response.data.Search });\r\n        if (this.state.movies.length !== null){\r\n          this.setState({\r\n            app : <App\r\n            movies={this.state.movies}\r\n            />});\r\n        }\r\n      })\r\n    .catch((err) => console.log(err));\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div className=\"container\">\r\n          <h1 className=\"logo__name\">MovieBuff...</h1>\r\n          <nav className=\"navbar sticky-top navbar-light\">\r\n            <a href=\"!#\" className=\"navbar-brand\">MovieBuff...</a>\r\n            <SearchBox run={this.onSearchTerm} />\r\n            </nav>\r\n          <div className=\"container_wrap\">\r\n            <div className=\"slider\">\r\n              <div className=\"callbacks_container\">\r\n                <ul className=\"rslides\" id=\"slider\">\r\n                  <li><img src=\"images/banner.jpg\" className=\"img-responsive\" alt=\"\" />\r\n                  </li>\r\n                  <li><img src=\"images/banner1.jpg\" className=\"img-responsive\"  alt=\"\" />\r\n                  </li>\r\n                  <li><img src=\"images/banner2.jpg\" className=\"img-responsive\" alt=\"\" />\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          { this.state.app }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Index/>,document.querySelector('#root'));\r\n"],"sourceRoot":""}